# This is a basic workflow to help you get started with Actions

name: CI
env:
  DEPLOYMENT_APPS: '{"myapp": ["app1", "app2", "app3"], "myotherapp": ["app1", "app2", "app4", "app5"]}'
# Controls when the workflow will run
on:
  issue_comment:
    types: [created]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      app_name:
        type: choice
        description: App to Perf Test
        options:
          - myapp
          - myotherapp

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  perf_test_request:
    name: Request Perf Test
    env:
      MANUAL_INPUT: ${{ inputs.app_name }}
    outputs:
      deployments: ${{ steps.check_regex.outputs.deployments }}
      run_build: ${{ steps.check_regex.outputs.run_build }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Pick assignments or flags
        id: check_regex
        run: |
          KEY=""
          if [ -n "$MANUAL_INPUT"]; then
            KEY="$MANUAL_INPUT"
          elif [[ $(jq -r .comment.body < $GITHUB_EVENT_PATH) =~ ^build\ it,\ perf\ it,\ (myapp|myotherapp) ]]; then
            KEY="${BASH_REMATCH[1]}"
          fi  

          if [ -n "$KEY" ]; then
            echo "Regex pattern not matched in PR body."
            echo "::set-output name=run_build::false"
          else
            echo "Running Perf for $KEY"
            apps_to_deploy=$(jq -r --arg key "$KEY" '.[$key]|join(",")' <<< "$DEPLOYMENT_APPS")
            echo "$apps_to_deploy"
            echo "::set-output name=run_build::true"
            echo "::set-output name=deployments::$apps_to_deploy"
          fi
        
          # comment_body=$(jq -r .comment.body < $GITHUB_EVENT_PATH)
          # if [[ "$comment_body" =~ ^build\ it,\ perf\ it,\ (myapp|myotherapp) ]]; then
          #   KEY="${BASH_REMATCH[1]}"
          #   echo "Running Perf for $KEY"
          #   apps_to_deploy=$(jq -r --arg key "$KEY" '.[$key]|join(",")' <<< "$DEPLOYMENT_APPS")
          #   echo "$apps_to_deploy"
          #   echo "::set-output name=run_build::true"
          #   echo "::set-output name=deployments::$apps_to_deploy"
          # else
          #   echo "Regex pattern not matched in PR body."
          #   echo "::set-output name=run_build::false"
          # fi
          
  # This workflow contains a single job called "build"
  build:
    needs: perf_test_request
    if: needs.perf_test_request.outputs.run_build == 'true'
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      deps: ${{ needs.perf_test_request.outputs.deployments }}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          IFS=","
          for id in $deps
          do
            echo "running: $id"
          done
